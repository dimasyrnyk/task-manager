{"version":3,"sources":["components/Home/Home.js","components/FormSignIn/SignInForm.js","components/FormSignUp/FormErrors.js","components/FormSignUp/SignUpForm.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","components/ModalSelect/ModalSelect.js","components/ModalInputs/InputTitle.js","components/ModalInputs/InputEmail.js","components/DeadlineSetter/DeadlineSetter.js","components/TaskEdit/TaskEdit.js","components/TaskRemove/TaskRemove.js","components/TaskAdd/TaskAdd.js","components/ControlPanel/ControlPanel.js","containers/TaskManager/TaskManager.js","components/UserLink/UserLink.js","components/TaskFull/TaskFull.js","components/User/User.js","containers/Main/Main.js","containers/Footer/Footer.js","containers/Header/Header.js","App.js","serviceWorker.js","reducers/activeuser.js","reducers/usersAPI.js","reducers/tasks.js","reducers/index.js","index.js"],"names":["Home","className","SignInForm","props","state","email","password","redirect","handleUserInput","bind","onSubmit","e","name","target","value","this","setState","preventDefault","user","users","filter","i","userEmail","toLowerCase","userPassword","length","onSignIn","alert","userLogin","to","id","type","onChange","placeholder","onClick","React","Component","FormErrors","Object","keys","formErrors","map","fieldName","key","SignUpForm","login","confirm","loginValid","emailValid","passwordValid","confirmValid","formValid","validateField","newUser","userAvatar","onSignUp","checkLogin","checkEmail","fieldValidationErrors","match","validateForm","disabled","class","TaskItem","task","onTaskUncheckAll","avatars","creator","concat","index","src","alt","checked","title","priority","deadline","status","replace","TaskList","tasks","onCheck","ModalSelect","options","item","InputTitle","InputEmail","filterUser","taskUsers","showUsers","handleChange","onAdd","onDelete","includes","checkUser","u","userValue","newUsers","find","parentNode","DeadlineSetter","startDate","Date","date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","selected","dateFormat","TaskEdit","getInitState","handleUserEmail","handleDatePicker","isOpen","text","editedTask","onEdit","TaskRemove","onRemove","TaskAdd","newTask","now","activeUser","onCreate","ControlPanel","checkedTask","onTaskEdit","onTaskRemove","onTaskAdd","TaskManager","checkAllTask","uncheckAllTask","onTaskCheckAll","undefined","onTaskCheck","connect","usersAPI","dispatch","checkTask","UserLink","TaskFull","fullTask","data","params","withRouter","get","ownTaskCount","otherTaskCount","indexOf","console","log","history","goBack","Main","exact","path","render","Footer","onSignOut","userLink","navSignInFalse","navSignInTrue","App","Boolean","window","location","hostname","initialState","all","combineReducers","action","copy","assign","push","newTasksList","checkedList","uncheckedList","taskList","splice","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25a97abe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Welcome to new task manager</h2>\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n                reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n                culpa qui officia deserunt mollit anim id est laborum.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SignInForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      redirect: false\r\n    }\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleUserInput(e) {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const user = this.props.users.filter(i => i.userEmail === this.state.email.toLowerCase() &&\r\n                                            i.userPassword === this.state.password)\r\n    if (user.length > 0) {\r\n      this.props.onSignIn(user[0]);\r\n      this.setState({ redirect: true });\r\n      alert(`Welcome, ${user[0].userLogin}!`);\r\n    } else {\r\n      alert(`Wrong email or password!`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) return <Redirect to=\"/task-manager\" />\r\n    return (\r\n      <div className=\"user-form user-form-size\">\r\n        <form>\r\n          <fieldset className=\"clearfix\">\r\n            <p>\r\n              <span className=\"fontawesome-envelope\"></span>\r\n              <input id=\"user-email\" type=\"text\" value={this.state.email}\r\n          onChange={this.handleUserInput} name=\"email\" placeholder=\"Email\" />\r\n            </p>\r\n            <p>\r\n              <span className=\"fontawesome-lock\"></span>\r\n              <input id=\"user-password\" type=\"password\" value={this.state.password}\r\n          onChange={this.handleUserInput} name=\"password\" placeholder=\"Password\" />\r\n            </p>\r\n            <p>\r\n              <input className=\"button button-form\" type=\"submit\" onClick={this.onSubmit} value=\"Sign in\" />\r\n            </p>\r\n          </fieldset>\r\n        </form>\r\n        <p>Don't have an account? &nbsp;&nbsp;<Link to=\"/signup\">Sign up</Link>\r\n          <span className=\"fontawesome-arrow-right\"></span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignInForm.propTypes = {\r\n  onSignIn: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n}\r\n\r\nexport default SignInForm;","import React from 'react';\r\n\r\nconst FormErrors = props =>\r\n  <div className='formErrors'>\r\n    {Object.keys(props.formErrors).map((fieldName, i) => {\r\n      if(fieldName === props.name && props.formErrors[fieldName].length > 0){\r\n        return (\r\n          <p key={i}>{fieldName} {props.formErrors[fieldName]}</p>\r\n        )    \r\n      } else {\r\n        return '';\r\n      }\r\n    })}\r\n  </div>\r\n\r\nexport default FormErrors;","import React from 'react';\r\nimport FormErrors from './FormErrors.js';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SignUpForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      email: '',\r\n      password: '',\r\n      confirm: '',\r\n      formErrors: {login: '', email: '', password: '', confirm: ''},\r\n      loginValid: false,\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      confirmValid: false,\r\n      formValid: false,\r\n      redirect: false\r\n    }\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleUserInput(e) {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({[name]: value}, \r\n        () => { this.validateField(name, value) });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n        userLogin: this.state.login,\r\n        userEmail: this.state.email.toLowerCase(),\r\n        userPassword: this.state.password,\r\n        userAvatar: \"./../new_user.png\"\r\n    };\r\n    this.props.onSignUp(newUser);\r\n    this.props.onSignIn(newUser);\r\n    this.setState({ redirect: true });\r\n    alert(`Your sign up was successful. Welcome, ${this.state.login}!`);\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let checkLogin = this.props.users.filter(i => i.userLogin === this.state.login);\r\n    let checkEmail = this.props.users.filter(i => i.userEmail === this.state.email);\r\n\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let loginValid = this.state.loginValid;\r\n    let emailValid = this.state.emailValid;\r\n    let passwordValid = this.state.passwordValid;\r\n    let confirmValid = this.state.confirmValid;\r\n\r\n  switch(fieldName) {\r\n      case 'login':\r\n        loginValid = value.match(/^([\\w.%+-]{5,20})$/i);\r\n        fieldValidationErrors.login = loginValid ? '' : ' is invalid';\r\n        if (checkLogin.length > 0) {\r\n            fieldValidationErrors.login = ' is busy';\r\n        }\r\n        break;\r\n      case 'email':\r\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n        if (checkEmail.length > 0) {\r\n            fieldValidationErrors.email = ' is busy';\r\n        }\r\n        break;\r\n      case 'password':\r\n        passwordValid = value.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n        break;\r\n      case 'confirm':\r\n        confirmValid = this.state.password === this.state.confirm;\r\n        fieldValidationErrors.confirm = confirmValid ? '': ' password';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,\r\n                    loginValid: loginValid,\r\n                    emailValid: emailValid,\r\n                    passwordValid: passwordValid,\r\n                    confirmValid: confirmValid\r\n                  }, this.validateForm);\r\n  }\r\n  \r\n  validateForm() {\r\n    this.setState({formValid: this.state.loginValid &&\r\n                              this.state.emailValid &&\r\n                              this.state.passwordValid &&\r\n                              this.state.confirmValid});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) return <Redirect to=\"/task-manager\" />\r\n    return (\r\n      <div className=\"user-form user-form-size\">\r\n        <form>\r\n          <fieldset className=\"clearfix\">\r\n            <p>\r\n              <span className=\"fontawesome-user\"></span>\r\n              <input id=\"user-login\" type=\"text\" value={this.state.login}\r\n          onChange={this.handleUserInput} name=\"login\" placeholder=\"Login\" />\r\n            <FormErrors formErrors={this.state.formErrors} name=\"login\" />\r\n            </p>\r\n            <p>\r\n              <span className=\"fontawesome-envelope\"></span>\r\n              <input id=\"user-email\" type=\"text\" value={this.state.email}\r\n          onChange={this.handleUserInput} name=\"email\" placeholder=\"Email\" />\r\n            <FormErrors formErrors={this.state.formErrors} name=\"email\" />\r\n            </p>\r\n            <p>\r\n              <span className=\"fontawesome-lock\"></span>\r\n              <input id=\"user-password\" type=\"password\" value={this.state.password}\r\n          onChange={this.handleUserInput} name=\"password\" placeholder=\"Password\" />\r\n            <FormErrors formErrors={this.state.formErrors} name=\"password\" />\r\n            </p>\r\n            <p>\r\n              <span className=\"fontawesome-lock\"></span>\r\n              <input id=\"user-password-confirm\" type=\"password\" value={this.state.confirm}\r\n          onChange={this.handleUserInput} name=\"confirm\" placeholder=\"Confirm password\" />\r\n            <FormErrors formErrors={this.state.formErrors} name=\"confirm\" />\r\n            </p>\r\n            <p>\r\n              <input className=\"button button-form\" type=\"submit\" onClick={this.onSubmit} value=\"Sign up\" disabled={!this.state.formValid} />\r\n            </p>\r\n          </fieldset>\r\n        </form>\r\n        <p>Already have an account? &nbsp;&nbsp;<Link to=\"/signin\">Sign in</Link>\r\n          <span class=\"fontawesome-arrow-right\"></span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUpForm.propTypes = {\r\n  onSignUp: PropTypes.func.isRequired,\r\n  onSignIn: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskItem({ task, onChange, onTaskUncheckAll }) {\r\n  \r\n  let avatars = [...[task.creator]].concat([...task.users]).map((user, index) =>\r\n    <Link to={`/user/${user.userLogin.toLowerCase()}`} key={index}>\r\n      <img src={user.userAvatar} alt=\"avatar\" className=\"task-manager__avatar\" />\r\n    </Link>\r\n  );\r\n\r\n  const togleCheckTasks = () => {\r\n    onTaskUncheckAll(false);\r\n  }\r\n\r\n  return (\r\n    <li className=\"task-manager__item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={task.checked}\r\n        className=\"task-manager__checkbox\"\r\n        onChange={() => onChange(task.id)}\r\n      />\r\n      <Link to={\"/task/\" + task.id} className=\"task-manager__name\" onClick={togleCheckTasks}>\r\n        <span>{task.title}</span>\r\n      </Link>\r\n      <span className={\"task-manager__priority \" + task.priority}>\r\n        {task.priority}\r\n      </span>\r\n      <span className=\"task-manager__deadline\">\r\n        {task.deadline}\r\n      </span>\r\n      <span className=\"task-manager__users\">\r\n        {avatars}\r\n      </span>\r\n      <span className={\"task-manager__status fontawesome-ok-sign \" + task.status.replace(/\\s/gi, \"-\")}>\r\n        {\" \" + task.status}\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onTaskUncheckAll: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport TaskItem from '../TaskItem/TaskItem.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TaskList(props) {\r\n    return (\r\n        <ul className=\"task-manager__list\">\r\n            {props.tasks.map(task => {\r\n                return (\r\n                    <TaskItem\r\n                        task={task}\r\n                        key={task.id}\r\n                        onChange={props.onCheck}\r\n                        onTaskUncheckAll={props.onTaskUncheckAll}\r\n                    />\r\n                )})\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nTaskList.propTypes = {\r\n    tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onCheck: PropTypes.func.isRequired,\r\n    onTaskUncheckAll: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ModalSelect(props) {\r\n    return (\r\n        <p className=\"modal__row\">\r\n        <span className=\"row__title\">{props.name}: </span>\r\n            <select\r\n                className=\"modal__select\"\r\n                name={props.name.toLowerCase()}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n            {  \r\n                props.options.map((item, index) => {\r\n                    return <option value={item} key={index}>{item}</option>;\r\n                })\r\n            }\r\n            </select>\r\n        </p>\r\n    );\r\n}\r\n\r\nModalSelect.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ModalSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction InputTitle(props) {\r\n    return (\r\n        <p className=\"modal__row\">\r\n        <span className=\"row__title\">{props.name}: *</span>\r\n            <input\r\n                className=\"modal__input\"\r\n                type=\"text\"\r\n                name={props.name.toLowerCase()}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                placeholder={props.name}\r\n            />\r\n        </p>\r\n    );\r\n}\r\n\r\nInputTitle.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default InputTitle;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass InputEmail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: this.props.users,\r\n            filterUser: '',\r\n            taskUsers: this.props.taskUsers,\r\n            showUsers: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            users: [...this.props.users].filter(user =>\r\n                    user.userEmail.includes(e.target.value.toLowerCase())),\r\n            filterUser: e.target.value,\r\n            showUsers: e.target.value.length > 0\r\n        });\r\n        const checkUser = [...this.props.users].filter(u => u.userEmail === e.target.value.toLowerCase());\r\n        if (checkUser.length > 0) {\r\n            this.onAdd(checkUser[0].userLogin);\r\n        }\r\n    }\r\n\r\n    onAdd(e) {\r\n        const userValue = typeof e === 'string' ? e : e.target.id;\r\n        const newUsers = [\r\n            ...this.state.taskUsers,\r\n            [...this.props.users].find(user => user.userLogin === userValue)\r\n        ];\r\n        this.setState({\r\n            users: [...this.props.users],\r\n            filterUser: '',\r\n            taskUsers: newUsers,\r\n            showUsers: false\r\n        });\r\n        this.props.onChange(newUsers);\r\n    }\r\n\r\n    onDelete(e) {\r\n        const newUsers = [...this.state.taskUsers].filter(user =>\r\n            user.userEmail !== this.state.taskUsers[e.target.parentNode.id].userEmail);\r\n        this.setState({taskUsers: newUsers});\r\n        this.props.onChange(newUsers);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <p className=\"modal__row\">\r\n                <span className=\"row__title\">Share with: *</span>\r\n                <div className=\"modal__email\">\r\n                    { this.state.taskUsers.map((user, index) => \r\n                        <span className=\"modal__email_checked\" id={index} key={index}>{user.userEmail}\r\n                            <i className=\"modal__email_remove fontawesome-trash\" onClick={this.onDelete} />\r\n                        </span>\r\n                    )}\r\n                    <input\r\n                        className=\"modal__email_input\"\r\n                        type=\"text\"\r\n                        value={this.state.filterUser}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Input email\"\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.showUsers &&\r\n                    <ul className=\"modal__email_users\">\r\n                    {\r\n                        this.state.users.map((item, index) => {\r\n                            return <li id={item.userLogin} onClick={this.onAdd} key={index}>\r\n                                        {item.userEmail}\r\n                                    </li>;\r\n                        })\r\n                    }\r\n                    </ul>\r\n                }\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nInputEmail.propTypes = {\r\n    users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    taskUsers: PropTypes.array.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default InputEmail;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass DeadlineSetter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: new Date()\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(date) {\r\n        this.setState({\r\n          startDate: date\r\n        })\r\n\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(date);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        this.props.onChange(`${mo}/${da}/${ye}`);\r\n\r\n        // let y = date.getFullYear();\r\n        // let m = date.getMonth() + 1;\r\n        // let d = date.getDate();\r\n        // this.props.onChange(`${m > 9 ? m : \"0\" + m}/${d > 9 ? d : \"0\" + d}/${y} `);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p className=\"modal__row\">\r\n            <span className=\"row__title\">Deadline: *</span>\r\n                <DatePicker\r\n                    id=\"date\"\r\n                    className=\"modal__select\"\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    name=\"startDate\"\r\n                    dateFormat=\"MM/dd/yyyy\"\r\n                />\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nDeadlineSetter.propTypes = {\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DeadlineSetter;","import React from 'react';\r\nimport '../TaskAdd/Modal.css';\r\nimport ModalSelect from '../ModalSelect/ModalSelect.js';\r\nimport InputTitle from '../ModalInputs/InputTitle.js';\r\nimport InputEmail from '../ModalInputs/InputEmail.js';\r\nimport DeadlineSetter from '../DeadlineSetter/DeadlineSetter.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TaskEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitState();\r\n    this.getInitState = this.getInitState.bind(this);\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n    this.handleUserEmail = this.handleUserEmail.bind(this);\r\n    this.handleDatePicker = this.handleDatePicker.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  getInitState(){\r\n    return {\r\n      isOpen: false,\r\n      title: this.props.task.title,\r\n      priority: this.props.task.priority,\r\n      deadline: this.props.task.deadline,\r\n      status: this.props.task.status,\r\n      users: this.props.task.users,\r\n      text: this.props.task.text\r\n    };\r\n  }\r\n\r\n  handleUserInput(e) {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleUserEmail(value) {\r\n    this.setState({users: value});\r\n  }\r\n\r\n  handleDatePicker(date) {\r\n    this.setState({deadline: date});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const editedTask = {\r\n      id: this.props.task.id,\r\n      creator: this.props.task.creator,\r\n      title: this.state.title,\r\n      priority: this.state.priority,\r\n      deadline: this.state.deadline,\r\n      status: this.state.status,\r\n      checked: false,\r\n      users: this.state.users,\r\n      text: this.state.text\r\n    };\r\n    this.props.onEdit(editedTask);\r\n    this.setState({ isOpen: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"control__button\" onClick={() => this.setState({ isOpen: true })}>\r\n          Edit\r\n        </button>\r\n\r\n        {this.state.isOpen && (\r\n          <div className='modal'>\r\n            <div className='modal__body'>\r\n              <h3 className='modal__title'>Edit task</h3>\r\n              <form className='modal__form'>\r\n                <InputTitle\r\n                  name={\"Title\"}\r\n                  value={this.state.title}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <ModalSelect\r\n                  name={\"Priority\"}\r\n                  value={this.state.priority}\r\n                  options={[\"High\", \"Medium\", \"Low\"]}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <DeadlineSetter\r\n                  onChange={this.handleDatePicker}\r\n                />\r\n                <InputEmail\r\n                  users={this.props.users}\r\n                  taskUsers={this.props.task.users}\r\n                  onChange={this.handleUserEmail}\r\n                />\r\n                <ModalSelect\r\n                  name={\"Status\"}\r\n                  value={this.state.status}\r\n                  options={[\"New\", \"Work on it\", \"Done\", \"Stuck\"]}\r\n                  onChange={this.handleUserInput}\r\n                />\r\n                <p className=\"modal__row\">\r\n                  <span className=\"row__title\">Description: *</span>\r\n                  <textarea\r\n                    className=\"modal__textarea\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    value={this.state.text}\r\n                    onChange={this.handleUserInput}\r\n                    placeholder=\"Describe your task\">\r\n                  </textarea>\r\n                </p>\r\n              </form>\r\n              <div className=\"modal__controls\">\r\n                <button className=\"control__button\" onClick={this.onSubmit}>\r\n                  Save changes\r\n                </button>\r\n                <button className=\"control__button\" onClick={() => this.setState({ isOpen: false })}>\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTaskEdit.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  activeUser: PropTypes.object.isRequired,\r\n  onEdit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskEdit;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TaskRemove(props) {\r\n    const onSubmit = () =>  {\r\n        props.onRemove();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/task-manager'>\r\n                <button className=\"control__button\" onClick={onSubmit}>\r\n                    Delete\r\n                </button>\r\n            </Link>\r\n      </div>\r\n    );\r\n}\r\n\r\nTaskRemove.propTypes = {\r\n  onRemove: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskRemove;","import React from 'react';\nimport './Modal.css';\nimport ModalSelect from '../ModalSelect/ModalSelect.js';\nimport InputTitle from '../ModalInputs/InputTitle.js';\nimport InputEmail from '../ModalInputs/InputEmail.js';\nimport DeadlineSetter from '../DeadlineSetter/DeadlineSetter.js';\nimport PropTypes from 'prop-types';\n\nclass TaskAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitState();\n    this.getInitState = this.getInitState.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.handleUserEmail = this.handleUserEmail.bind(this);\n    this.handleDatePicker = this.handleDatePicker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  getInitState(){\n    return {\n      isOpen: false,\n      creator: '',\n      title: '',\n      priority: \"High\",\n      deadline: '',\n      status: 'New',\n      users: [],\n      text: ''\n    };\n  }\n\n  handleUserInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleUserEmail(value) {\n    this.setState({users: value});\n  }\n\n  handleDatePicker(date) {\n    this.setState({deadline: date});\n  }\n\n  onSubmit(e) {\n    const newTask = {\n      id: Date.now(),\n      creator: this.props.activeUser,\n      title: this.state.title,\n      priority: this.state.priority,\n      deadline: this.state.deadline,\n      status: this.state.status,\n      checked: false,\n      users: this.state.users,\n      text: this.state.text\n    };\n    this.props.onCreate(newTask);\n    this.setState(this.getInitState());\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"control__button\" onClick={() => this.setState({ isOpen: true })}>\n          Add task\n        </button>\n\n        {this.state.isOpen && (\n          <div className='modal'>\n            <div className='modal__body'>\n              <h3 className='modal__title'>Add new task</h3>\n              <form className='modal__form'>\n                <InputTitle\n                  name={\"Title\"}\n                  value={this.state.title}\n                  onChange={this.handleUserInput}\n                />\n                <ModalSelect\n                  name={\"Priority\"}\n                  value={this.state.priority}\n                  options={[\"High\", \"Medium\", \"Low\"]}\n                  onChange={this.handleUserInput}\n                />\n                <DeadlineSetter\n                  onChange={this.handleDatePicker}\n                />\n                <InputEmail\n                  users={this.props.users}\n                  taskUsers={[]}\n                  onChange={this.handleUserEmail}\n                />\n                <ModalSelect\n                  name={\"Status\"}\n                  value={this.state.status}\n                  options={[\"New\", \"Work on it\", \"Done\", \"Stuck\"]}\n                  onChange={this.handleUserInput}\n                />\n                <p className=\"modal__row\">\n                  <span className=\"row__title\">Description: *</span>\n                  <textarea\n                    className=\"modal__textarea\"\n                    type=\"text\"\n                    name=\"text\"\n                    value={this.state.text}\n                    onChange={this.handleUserInput}\n                    placeholder=\"Describe your task\">\n                  </textarea>\n                </p>\n              </form>\n              <div className=\"modal__controls\">\n                <button className=\"control__button\" onClick={this.onSubmit}>\n                  Add task\n                </button>\n                <button className=\"control__button\" onClick={() => this.setState({ isOpen: false })}>\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nTaskAdd.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  activeUser: PropTypes.object.isRequired,\n  onCreate: PropTypes.func.isRequired\n}\n\nexport default TaskAdd; ","import React from 'react';\r\nimport TaskEdit from '../../components/TaskEdit/TaskEdit.js';\r\nimport TaskRemove from '../../components/TaskRemove/TaskRemove.js';\r\nimport TaskAdd from '../../components/TaskAdd/TaskAdd.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ControlPanel(props) {\r\n  return (\r\n    <div className=\"task-manager__control-panel\">\r\n      { props.checkedTask === 1 &&\r\n        <TaskEdit onEdit={props.onTaskEdit} task={props.task}\r\n          users={props.users} activeUser={props.activeUser} />\r\n      }\r\n      { props.checkedTask > 0 &&\r\n        <TaskRemove onRemove={props.onTaskRemove} />\r\n      }\r\n      <TaskAdd onCreate={props.onTaskAdd} users={props.users} activeUser={props.activeUser} />\r\n    </div>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  task: PropTypes.object,\r\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  checkedTask: PropTypes.number.isRequired,\r\n  activeUser: PropTypes.object.isRequired,\r\n  onTaskAdd: PropTypes.func.isRequired,\r\n  onTaskRemove: PropTypes.func.isRequired,\r\n  onTaskEdit: PropTypes.func.isRequired\r\n}\r\n  \r\n  export default ControlPanel;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './TaskManager.css';\r\nimport TaskList from '../../components/TaskList/TaskList.js';\r\nimport ControlPanel from '../../components/ControlPanel/ControlPanel.js';\r\n\r\nclass TaskManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkAllTask = this.checkAllTask.bind(this);\r\n    this.uncheckAllTask = this.uncheckAllTask.bind(this);\r\n  }\r\n    \r\n  checkAllTask(e) {\r\n    this.props.onTaskCheckAll(e.target.checked, this.props.activeUser);\r\n  }\r\n\r\n  uncheckAllTask(value) {\r\n    this.props.onTaskUncheckAll(value, this.props.activeUser);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.activeUser.userLogin === undefined) return <Redirect to=\"/\" />\r\n    return (\r\n        <div className=\"task-manager\">\r\n          <ControlPanel\r\n          task={this.props.task}\r\n          users={this.props.users}\r\n          checkedTask={this.props.checkedTask}\r\n          activeUser={this.props.activeUser}\r\n          onTaskAdd={this.props.onTaskAdd}\r\n          onTaskRemove={this.props.onTaskRemove}\r\n          onTaskEdit={this.props.onTaskEdit}\r\n          />\r\n          <div className=\"task-manager__header\">\r\n            <input type=\"checkbox\" className=\"task-manager__checkbox\" onChange={this.checkAllTask} />\r\n            <span className=\"task-manager__name\">Task name</span>\r\n            <span className=\"task-manager__priority\">Priority</span>\r\n            <span className=\"task-manager__deadline\">Deadline</span>\r\n            <span className=\"task-manager__users\">Users</span>\r\n            <span className=\"task-manager__status\">Status</span>\r\n          </div>\r\n          {this.props.tasks.length ?\r\n            <TaskList\r\n              tasks={this.props.tasks}\r\n              onCheck={this.props.onTaskCheck}\r\n              onTaskUncheckAll={this.uncheckAllTask}\r\n            /> :\r\n            <p className=\"task-manager__deadline\">No tasks!</p>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    activeUser: state.activeUser,\r\n    users: state.usersAPI.users,\r\n    tasks: state.tasks.filter(task => [task.creator].concat(task.users).find(user =>\r\n                                      user.userLogin === state.activeUser.userLogin) !== undefined),\r\n    task: state.tasks.find(task => task.checked === true)\r\n  }),\r\n  dispatch => ({\r\n    onTaskCheck: (id) =>\r\n      dispatch({ type: 'TASK_CHECK', id: id }),\r\n    onTaskCheckAll: (value, user) =>\r\n      dispatch({ type: 'TASK_CHECK_ALL', checked: {checkTask: value, user: user}}),\r\n    onTaskUncheckAll: (value, user) =>\r\n      dispatch({ type: 'TASK_UNCHECK_ALL', checked: {checkTask: value, user: user}}),\r\n    onTaskAdd: (task) =>\r\n      dispatch({ type: 'TASK_ADD', newTask: task }),\r\n    onTaskRemove: () =>\r\n      dispatch({ type: 'TASK_REMOVE' }),\r\n    onTaskEdit: (task) =>\r\n      dispatch({ type: 'TASK_EDIT', editedTask: task })\r\n  })\r\n)(TaskManager);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction UserLink(props) {\r\n    return (\r\n        <Link to={`/user/${props.user.userLogin.toLowerCase()}`} className=\"task__user\">\r\n            <img src={'./.' + props.user.userAvatar}\r\n                alt=\"avatar\"\r\n                className=\"task-manager__avatar\"\r\n            />\r\n            <span>{props.user.userLogin}</span>\r\n      </Link>\r\n    );\r\n}\r\n\r\nUserLink.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n  }\r\n\r\nexport default UserLink;","import React from 'react';\r\nimport './TaskFull.css';\r\nimport { Link } from 'react-router-dom';\r\nimport TaskEdit from '../../components/TaskEdit/TaskEdit.js';\r\nimport TaskRemove from '../../components/TaskRemove/TaskRemove.js';\r\nimport UserLink from '../../components/UserLink/UserLink.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskFull(props) {\r\n    const fullTask = [...props.data.tasks].find(task => task.id === +props.match.params.id);\r\n\r\n    const getTask = () => {\r\n        fullTask.checked = true;\r\n        return fullTask;\r\n    }\r\n\r\n    const onClose = () => {\r\n        fullTask.checked = false;\r\n        return fullTask;\r\n    }\r\n\r\n    if (!fullTask) {\r\n        return <div className=\"task__container\">Sorry, but the task was not found.</div>\r\n    }\r\n  \r\n    return (\r\n        <div className=\"task__container\">\r\n            <h2 className=\"task__title\">\r\n                {fullTask.title}\r\n                <span className={\"task__priority \" + fullTask.priority}>\r\n                    {fullTask.priority}\r\n                </span>\r\n            </h2>\r\n            <div>\r\n                <p className=\"task__deadline\">\r\n                    Deadline:\r\n                    <span>{fullTask.deadline}</span>\r\n                </p>\r\n                <p className=\"task__users\">\r\n                    Creator:\r\n                    <span>\r\n                        <UserLink user={fullTask.creator} />\r\n                    </span>\r\n                </p>\r\n                <p className=\"task__users\">\r\n                    Users:\r\n                    <span>\r\n                        {\r\n                            fullTask.users.map((user, index) => <UserLink user={user} key={index} />)\r\n                        }\r\n                    </span>\r\n                </p>\r\n                <p className=\"task__status\">\r\n                    Status:\r\n                    <span className={\"fontawesome-ok-sign \" + fullTask.status.replace(/\\s/gi, \"-\")}>\r\n                        {\" \" + fullTask.status}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <p className=\"task__description\">\r\n                {fullTask.text}\r\n            </p>\r\n            <div className=\"task__controls\">\r\n                <TaskEdit\r\n                    task={getTask()}\r\n                    users={props.data.users}\r\n                    onEdit={props.data.onTaskEdit}\r\n                    activeUser={props.data.activeUser} />\r\n                <TaskRemove onRemove={props.data.onTaskRemove} />\r\n\r\n                <Link to='/task-manager'>\r\n                    <button className=\"control__button\" onClick={onClose}>\r\n                        Back\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nTaskFull.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n  }\r\n\r\nexport default TaskFull;","import React from 'react';\r\nimport './User.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction User(props) {\r\n  const user = props.data.usersAPI.get(props.match.params.login);\r\n\r\n  if(!user) {\r\n    return <div className=\"user__container\">Sorry, but the user was not found.</div>\r\n  }\r\n\r\n  const ownTaskCount = props.data.tasks.filter(task => task.creator.userLogin === user.userLogin);\r\n  const otherTaskCount = props.data.tasks.filter(task => task.users.indexOf(user.userEmail) !== -1);\r\n\r\n  return (\r\n    <div className=\"user__container\">\r\n      <div className=\"user__profile\">\r\n        {console.log(user.userAvatar)}\r\n        <img src={'./.' + user.userAvatar} alt=\"User avatar\" className=\"user__avatar\" />\r\n        <div className=\"user_description\">\r\n          <h3 className=\"user__title\">{user.userLogin}</h3>\r\n          <p className=\"user__title\">Email: {user.userEmail}</p>\r\n          <p>Created tasks <strong className=\"user__count\">{ownTaskCount.length}</strong></p>\r\n          <p>Received tasks <strong className=\"user__count\">{otherTaskCount.length}</strong></p>\r\n        </div>\r\n      </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Back\"\r\n          className=\"control__button\"\r\n          onClick={() => props.history.goBack()}\r\n        />\r\n\r\n    </div>\r\n );\r\n}\r\n\r\nUser.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(User);","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Home from '../../components/Home/Home.js';\r\nimport SignInForm from '../../components/FormSignIn/SignInForm.js';\r\nimport SignUpForm from '../../components/FormSignUp/SignUpForm.js';\r\nimport TaskManager from '../../containers/TaskManager/TaskManager.js';\r\nimport TaskFull from '../../components/TaskFull/TaskFull.js';\r\nimport User from '../../components/User/User.js';\r\n\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return(\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUpForm\r\n              onSignUp={this.props.onSignUp}\r\n              onSignIn={this.props.onSignIn}\r\n              users={this.props.users}\r\n            />\r\n          </Route>\r\n          <Route path=\"/signin\">\r\n            <SignInForm\r\n              onSignIn={this.props.onSignIn}\r\n              users={this.props.users}\r\n            />\r\n          </Route>\r\n          <Route path=\"/task-manager\">\r\n            <TaskManager checkedTask={this.props.checked} />\r\n          </Route>\r\n          <Route path=\"/task/:id\" render={(props) => (\r\n            <TaskFull {...props} data={{\r\n              tasks: this.props.tasks,\r\n              users: this.props.users,\r\n              activeUser: this.props.activeUser,\r\n              checkAllTask: this.props.onTaskCheckAll,\r\n              onTaskRemove: this.props.onTaskRemove,\r\n              onTaskEdit: this.props.onTaskEdit\r\n            }}/>\r\n          )}/>\r\n          <Route path=\"/user/:login\" render={(props) => (\r\n            <User {...props} data={{\r\n              usersAPI: this.props.usersAPI,\r\n              tasks: this.props.tasks\r\n            }}/>\r\n          )}/>\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    activeUser: state.activeUser,\r\n    users: state.usersAPI.users,\r\n    usersAPI: state.usersAPI,\r\n    tasks: state.tasks,\r\n    checked: state.tasks.filter(task => task.checked).length\r\n  }),\r\n  dispatch => ({\r\n    onSignIn: (user) =>\r\n      dispatch({ type: 'USER_SIGNIN', activeUser: user }),\r\n    onSignUp: (user) =>\r\n      dispatch({ type: 'USER_SIGNUP', newUser: user }),\r\n    onTaskCheckAll: (value, user) =>\r\n      dispatch({ type: 'TASK_CHECK_ALL', checked: {checkTask: value, user: user}}),\r\n    onTaskRemove: () =>\r\n      dispatch({ type: 'TASK_REMOVE' }),\r\n    onTaskEdit: (task) =>\r\n      dispatch({ type: 'TASK_EDIT', editedTask: task })\r\n  })\r\n)(Main);","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n          <h3>Copyright @ 2020</h3>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Header(props) {\r\n    let userLink = `/user/${props.activeUser.userLogin !== undefined &&\r\n                            props.activeUser.userLogin.toLowerCase()}`;\r\n\r\n    const navSignInFalse = (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/signin\">Sign in</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/signup\">Sign up</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    );\r\n\r\n    const navSignInTrue = (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to={userLink}>\r\n                    <p id=\"active-user\">{props.activeUser.userLogin}</p>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/\" onClick={props.onSignOut}>Sign out</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    );\r\n\r\n    return (\r\n        <header>\r\n            <h1><Link to=\"/\">Task Manager</Link></h1>\r\n            { props.activeUser.userLogin === undefined ? navSignInFalse : navSignInTrue }\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    activeUser: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        activeUser: state.activeUser\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: () =>\r\n        dispatch({ type: 'USER_SIGNOUT' })\r\n      })\r\n)(Header);","import React from 'react';\nimport './App.css';\nimport Main from './containers/Main/Main.js';\nimport Footer from './containers/Footer/Footer.js';\nimport Header from './containers/Header/Header.js';\n\n\nclass App extends React.Component {\n  render() {\n    return (   \n      <div className=\"app\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\r\n\r\nexport default function activeUser(state = initialState, action) {\r\n    if(action.type === 'USER_SIGNIN') {\r\n      return action.activeUser;\r\n    } else if(action.type === 'USER_SIGNOUT') {\r\n      return {};\r\n    }\r\n    return state;\r\n}","const initialState = {\r\n  users: [\r\n    {\r\n      userLogin: \"Admin\",\r\n      userEmail: \"admin@gmail.com\",\r\n      userPassword: \"drewaq\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"PetroMeleh\",\r\n      userEmail: \"petromeleh@gmail.com\",\r\n      userPassword: \"qwerty12345\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"StepanGoryn\",\r\n      userEmail: \"stepangoryn@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"IvanDemydas\",\r\n      userEmail: \"ivandemydas@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"MarichkaSynevir\",\r\n      userEmail: \"marichkasynevir@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"MaxPain\",\r\n      userEmail: \"maxpain@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"NazarRepetuha\",\r\n      userEmail: \"nazarrepetuha@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    },\r\n    {\r\n      userLogin: \"IrynaLogin\",\r\n      userEmail: \"irynalogin@gmail.com\",\r\n      userPassword: \"1234567\",\r\n      userAvatar: './task-manager/new_user.png'\r\n    }\r\n  ],\r\n  all: function() { return this.users},\r\n  get: function(login) {\r\n    const isUser = u => u.userLogin.toLowerCase() === login\r\n    return this.users.find(isUser)\r\n  }\r\n};\r\n\r\nexport default function usersAPI(state = initialState, action) {\r\n    if(action.type === 'USER_SIGNUP') {\r\n      let copy = Object.assign({}, state);\r\n      copy.users.push(action.newUser);\r\n      return copy;\r\n    }\r\n    return state;\r\n}","const initialState = [\r\n  {\r\n    id: 1,\r\n    creator: {\r\n      userLogin: \"Admin\",\r\n      userEmail: \"admin@gmail.com\",\r\n      userPassword: \"drewaq\",\r\n      userAvatar: \"./task-manager/new_user.png\"\r\n    },\r\n    title: \"First task\",\r\n    priority: \"High\",\r\n    deadline: \"13/04/2020\",\r\n    status: 'Done',\r\n    checked: false,\r\n    users: [],\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id magna a ligula semper tristique vel at tortor. Donec quis dignissim erat. Mauris sodales condimentum tellus, ac convallis orci. Duis congue tellus a condimentum fringilla. Vestibulum pharetra nec arcu lobortis faucibus. Proin vitae odio et leo commodo pellentesque. Integer vestibulum ante odio, eget accumsan nisi accumsan maximus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum maximus est in tellus semper, quis dignissim massa blandit. Nam in venenatis sapien. Cras in sem elementum, condimentum dui vel, fermentum diam. Ut congue vitae eros non facilisis. Nullam malesuada, sapien sit amet bibendum condimentum, metus orci laoreet libero, quis vulputate elit est eu purus.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    creator: {\r\n      userLogin: \"Admin\",\r\n      userEmail: \"admin@gmail.com\",\r\n      userPassword: \"drewaq\",\r\n      userAvatar: \"./task-manager/new_user.png\"\r\n    },\r\n    title: \"Something new\",\r\n    priority: \"Low\",\r\n    deadline: \"23/04/2020\",\r\n    status: 'New',\r\n    checked: false,\r\n    users: [\r\n      {\r\n        userLogin: \"PetroMeleh\",\r\n        userEmail: \"petromeleh@gmail.com\",\r\n        userPassword: \"qwerty12345\",\r\n        userAvatar: \"./task-manager/new_user.png\"\r\n      }\r\n    ],\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id magna a ligula semper tristique vel at tortor. Donec quis dignissim erat. Mauris sodales condimentum tellus, ac convallis orci. Duis congue tellus a condimentum fringilla. Vestibulum pharetra nec arcu lobortis faucibus. Proin vitae odio et leo commodo pellentesque. Integer vestibulum ante odio, eget accumsan nisi accumsan maximus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum maximus est in tellus semper, quis dignissim massa blandit. Nam in venenatis sapien. Cras in sem elementum, condimentum dui vel, fermentum diam. Ut congue vitae eros non facilisis. Nullam malesuada, sapien sit amet bibendum condimentum, metus orci laoreet libero, quis vulputate elit est eu purus.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    creator: {\r\n      userLogin: \"Admin\",\r\n      userEmail: \"admin@gmail.com\",\r\n      userPassword: \"drewaq\",\r\n      userAvatar: \"./task-manager/new_user.png\"\r\n    },\r\n    title: \"FreeCodeCamp\",\r\n    priority: \"Medium\",\r\n    deadline: \"21/04/2020\",\r\n    status: 'Work on it',\r\n    checked: false,\r\n    users: [],\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id magna a ligula semper tristique vel at tortor. Donec quis dignissim erat. Mauris sodales condimentum tellus, ac convallis orci. Duis congue tellus a condimentum fringilla. Vestibulum pharetra nec arcu lobortis faucibus. Proin vitae odio et leo commodo pellentesque. Integer vestibulum ante odio, eget accumsan nisi accumsan maximus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum maximus est in tellus semper, quis dignissim massa blandit. Nam in venenatis sapien. Cras in sem elementum, condimentum dui vel, fermentum diam. Ut congue vitae eros non facilisis. Nullam malesuada, sapien sit amet bibendum condimentum, metus orci laoreet libero, quis vulputate elit est eu purus.\"\r\n  }\r\n];\r\n\r\nexport default function tasks(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'TASK_CHECK':\r\n      let newTasksList = [...state];\r\n      newTasksList.map(task => task.id === action.id ? task.checked = !task.checked : task);\r\n      return newTasksList;\r\n    case 'TASK_CHECK_ALL':\r\n      let checkedList = [...state];\r\n      action.checked.checkTask ?\r\n        (checkedList.map(task => task.users.indexOf(action.checked.user.userEmail) !== -1 ||\r\n                                task.creator.userLogin === action.checked.user.userLogin ?\r\n                                task.checked = true : tasks)) :\r\n        (checkedList.map(task => task.users.indexOf(action.checked.user.userEmail) !== -1 ||\r\n                                task.creator.userLogin === action.checked.user.userLogin ?\r\n                                task.checked = false : tasks));\r\n    return checkedList;\r\n    case 'TASK_UNCHECK_ALL':\r\n      let uncheckedList = [...state];\r\n        uncheckedList.map(task => task.users.indexOf(action.checked.user.userEmail) !== -1 ||\r\n                                task.creator.userLogin === action.checked.user.userLogin ?\r\n                                task.checked = false : tasks);\r\n      return uncheckedList;\r\n    case 'TASK_ADD':\r\n      return [\r\n        ...state,\r\n        action.newTask\r\n      ];\r\n    case 'TASK_REMOVE':\r\n      return [...state].filter(task => task.checked === false);\r\n    case 'TASK_EDIT':\r\n      let taskList = [...state];\r\n      let index = taskList.indexOf(taskList.find(task => task.id === action.editedTask.id));\r\n      taskList.splice(index, 1, action.editedTask);\r\n      return taskList;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport activeUser from './activeuser.js';\r\nimport usersAPI from './usersAPI.js';\r\nimport tasks from './tasks.js';\r\n\r\nexport default combineReducers({\r\n    activeUser,\r\n    usersAPI,\r\n    tasks\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reducer from './reducers';\n\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}